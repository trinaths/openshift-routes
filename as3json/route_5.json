{
    "class": "ADC",
    "schemaVersion": "3.11.0",
    "id": "urn:uuid:7063285e-9243-473a-8f36-49eaaeea80a7",
    "label": "Converted Declaration",
    "remark": "Auto-generated by Project Charon",
    "openshift": {
        "class": "Tenant",
        "Shared": {
            "class": "Application",
            "template": "shared",
            "openshift_f5demo_f5_demo_app_route_2": {
                "members": [
                    {
                        "addressDiscovery": "static",
                        "servicePort": 8080,
                        "serverAddresses": [
                            "10.129.0.3",
                            "10.129.0.4",
                            "10.130.0.2",
                            "10.130.0.3"
                        ]
                    }
                ],
                "class": "Pool"
            },
            "openshift_f5demo_f5_demo_app_route_3": {
                "members": [
                    {
                        "addressDiscovery": "static",
                        "servicePort": 8080,
                        "serverAddresses": [
                            "10.129.0.3",
                            "10.129.0.4",
                            "10.130.0.2",
                            "10.130.0.3"
                        ]
                    }
                ],
                "class": "Pool"
            },
            "ab_deployment_path_irule": {
                "class": "iRule",
                "iRule": "    metadata {\n        user_agent {\n            app-service none\n            persist true\n            value k8s-bigip-ctlr-1.9.1-n1591-541111110\n        }\n    }\nproc select_ab_pool {path default_pool } {\n\t\t\tset last_slash [string length $path]\n\t\t\tset ab_class \"/openshift/ab_deployment_dg\"\n\t\t\twhile {$last_slash >= 0} {\n\t\t\t\tif {[class match $path equals $ab_class]} then {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tset last_slash [string last \"/\" $path $last_slash]\n\t\t\t\tincr last_slash -1\n\t\t\t\tset path [string range $path 0 $last_slash]\n\t\t\t}\n\t\t\tif {$last_slash >= 0} {\n\t\t\t\tset ab_rule [class match -value $path equals $ab_class]\n\t\t\t\tif {$ab_rule != \"\"} then {\n\t\t\t\t\tset weight_selection [expr {rand()}]\n\t\t\t\t\tset service_rules [split $ab_rule \";\"]\n\t\t\t\t\tforeach service_rule $service_rules {\n\t\t\t\t\t\tset fields [split $service_rule \",\"]\n\t\t\t\t\t\tset pool_name [lindex $fields 0]\n\t\t\t\t\t\tset weight [expr {double([lindex $fields 1])}]\n\t\t\t\t\t\tif {$weight_selection <= $weight} then {\n\t\t\t\t\t\t\treturn $pool_name\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tHTTP::respond 503\n\t\t\t}\n\t\t\treturn $default_pool\n\t\t}\n\t\twhen HTTP_REQUEST priority 200 {\n\t\t\tset path [string tolower [HTTP::host]][HTTP::path]\n\t\t\tset selected_pool [call select_ab_pool $path \"\"]\n\t\t\tif {$selected_pool != \"\"} then {\n\t\t\t\tpool $selected_pool\n\t\t\t\tevent disable\n\t\t\t}\n\t\t}"
            },
            "https_ose_vserver": {
                "layer4": "tcp",
                "metadata": {
                    "user_agent": {
                        "value": "k8s-bigip-ctlr-1.9.1-n1591-541111110"
                    }
                },
                "translateServerAddress": true,
                "translateServerPort": true,
                "class": "Service_HTTP",
                "profileHTTP": {
                    "bigip": "/Common/http"
                },
                "profileTCP": {
                    "bigip": "/Common/tcp"
                },
                "virtualAddresses": [
                    "172.16.3.6%0"
                ],
                "virtualPort": 443,
                "snat": "auto"
            },
            "ose_vserver": {
                "layer4": "tcp",
                "metadata": {
                    "user_agent": {
                        "value": "k8s-bigip-ctlr-1.9.1-n1591-541111110"
                    }
                },
                "iRules": [
                    "ab_deployment_path_irule"
                ],
                "translateServerAddress": true,
                "translateServerPort": true,
                "class": "Service_HTTP",
                "profileHTTP": {
                    "bigip": "/Common/http"
                },
                "profileTCP": {
                    "bigip": "/Common/tcp"
                },
                "virtualAddresses": [
                    "172.16.3.6%0"
                ],
                "virtualPort": 80,
                "snat": "auto"
            },
            "ab_deployment_dg": {
                "records": [
                    {
                        "key": "mysite.f5demo.com",
                        "value": "\"openshift_f5demo_f5-demo-app-route-2,0.250;openshift_f5demo_f5-demo-app-route-3,0.500;openshift_f5demo_f5-demo-app-route,1.000\""
                    }
                ],
                "keyDataType": "string",
                "class": "Data_Group"
            }
        }
    }
}